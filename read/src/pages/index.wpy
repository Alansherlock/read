<style lang="less">
//搜索框样式
.novel-name {
  display:flex;
  justify-content: flex-start;
  align-items: center;
  width: 96%;
  height:72rpx;
  color: #ccc;
  background-color: rgb(245, 240, 240);
  margin:24rpx 16rpx 8rpx 16rpx;
  padding:0 16rpx;
  box-sizing: border-box;
  font-size:14px;
  border-radius: 16rpx;
  .search-novel {
    width:24rpx;
    height:24rpx;
    margin-right:16rpx;
  }
}
//轮播样式
.swiper_image {
  margin: 16rpx;
}
.item_image {
  width:100%;
  display:flex;
  justify-content:center;
  height:80%;
  image {
    width: 100%;
    border-radius:10px;
    height:92%;
  }
}
//对于轮播组件的样式修改
swiper {
  display:block;
  width:100%;
}
//tab 样式
.tab-select {
  margin: 24rpx;
  display: flex;
  justify-content: space-between;
  height:128rpx;
  width:96%;
  view {
    width:25%;
    height:100%;
    display:flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    font-size:12px;
    margin-bottom:12rpx;
    color: #ccc;
  }
  image {
    height:48rpx;
    width:48rpx;
  }
  .radius {
    width:86rpx;
    height:86rpx;
    border-radius: 50%;
  }
  .tab-select-first {
    background-color: rgb(194, 241, 194);
  }
  .tab-select-second {
    background-color: rgb(245, 209, 155);
  }
  .tab-select-third {
    background-color: rgb(211, 232, 247);
  }
  .tab-select-fourth {
    background-color: rgb(241, 194, 220);
  }
}
</style>
<template>
  <view class="container">
    <!-- 这里是要placeholder显示最热的小说 -->
    <view class="novel-name">
      <image class="search-novel" src="../images/search-novel.png"></image>
      {{novelName}}</view>
    <swiper indicator-color='gray'
    indicator-active-color='green' autoplay='true' interval='5000' duration='500'>
      <block wx:for="{{imgUrl}}" wx:key="index">
        <swiper-item class="item_image">
        <image src='{{item}}' class='swiper_image' mode="aspectFill"></image>
        </swiper-item>
      </block>
    </swiper>
    <view class="tab-select">
        <view>
          <view class="radius tab-select-first">
              <image src="../images/tab/tab-sort.png"></image>
          </view>
          排行榜
        </view>
        <view>
          <view class="radius tab-select-second">
              <image src="../images/tab/tab-vip.png"></image>
          </view>
          VIP
        </view>
        <view>
          <navigator url="./category" hover-class="navigator-hover">
            <view class="radius tab-select-third">
                <image src="../images/tab/tab-type.png"></image>
            </view>
          </navigator>
            分类
        </view>
        <view>
          <view class="radius tab-select-fourth">
              <image src="../images/tab/tab-book.png"></image>
          </view>
          书单
        </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '追书神器',
      navigationBarTextStyle: 'black'
    }
    components = {
    }
    data = {
      imgUrl: [
          'https://qidian.qpic.cn/qidian_common/349573/4f9f78e1563d037cb399ede1d299dc87/0',
          'https://qidian.qpic.cn/qidian_common/349573/7f4233f2b2b561b1c1db7de04a6ce578/0',
          'https://qidian.qpic.cn/qidian_common/349573/d0d8fc89c8c8835cf5823d574eb8aaa1/0',
          'https://qidian.qpic.cn/qidian_common/349573/6f5ed3e5d5a313ea7167ef1da006b8c1/0'
      ],
      novelName:'太古神王',
      tabList:[
        {
          name:'排行榜',
          icon:'../images/tab/tab-sort.png'
        },
        {
          name:'VIP',
          icon:'../images/tab/tab-vip.png'
        },
        {
          name:'分类',
          icon:'../images/tab/tab-type.png'
        },
        {
          name:'书单',
          icon:'../images/tab/tab-book.png'
        },
      ]
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      plus () {
        this.mynum++
      },
      toast () {
        let promise = this.$invoke('toast', 'show', {
          title: '自定义标题',
          img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
        })

        promise.then((d) => {
          console.log('toast done')
        })
      },
      tap () {
        console.log('do noting from ' + this.$name)
      },
      communicate () {
        console.log(this.$name + ' tap')

        this.$invoke('counter2', 'minus', 45, 6)
        this.$invoke('counter1', 'plus', 45, 6)

        this.$broadcast('index-broadcast', 1, 3, 4)
      },
      request () {
        let self = this
        let i = 10
        let map = ['MA==', 'MQo=', 'Mg==', 'Mw==', 'NA==', 'NQ==', 'Ng==', 'Nw==', 'OA==', 'OQ==']
        while (i--) {
          wepy.request({
            url: 'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' + map[i] + '&i=' + i,
            success: function (d) {
              self.netrst += d.data + '.'
              self.$apply()
            }
          })
        }
      },
      counterEmit (...args) {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    onLoad() {
      let self = this
      this.$parent.getUserInfo(function (userInfo) {
        if (userInfo) {
          self.userInfo = userInfo
        }
        self.normalTitle = '标题已被修改'

        self.setTimeoutTitle = '标题三秒后会被修改'
        setTimeout(() => {
          self.setTimeoutTitle = '到三秒了'
          self.$apply()
        }, 3000)

        self.$apply()
      })
    }
  }
</script>
